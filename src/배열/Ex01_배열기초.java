package 배열;

public class Ex01_배열기초 {

	public static void main(String[] args) {
		// 배열(Array) 자료구조
		// : 같은 타입의 여러 데이터를 하나의 묶음으로 다루는 '자료구조'이다.(=데이터 구조)다. (=데이터 structure)다.

		// 배열의 특징
		// 1. 같은 자료타입끼리만 하나로 묶을 수있다.(자료형태=자료형=데이터형태=데이터타입)
		// 2. 인덱스 번호(=방 번호=방 호수)를 가진다.
		// 인덱스 번호는 0부터 차례로 1씩 증가한다.
		// 3. 크기가 고정적이다.

		// 배열 선언
		int[] nums = new int[5];

		// 배열에 데이터 저장 방법.
		// ->정확하게 방번호(인덱스번호)를 지정한 후 저장.
		// 0,1,2,3,4번호의 인덱스(방)을 5개 생성한거다.
		
		// nums 배열의 0번 인덱스(=방=저장공간)에 0이라는 데이터(=자료)를 넣겠다.
		nums[0] = 0;
		// nums 배열의 3번 인덱스(=방=저장공간)에 15이라는 데이터(=자료)를 넣겠다.
		nums[3] = 15;
		// 인덱스를 초과하면 오류이다.!
		// nums[5]=12; -> 0번부터 시작이므로, 5번방은 6번째 방이다.

		// 예제
		// 1. 정수형 자료 5개를 저장할 수 있는 array라는 이름의 배열 선언.
		// 2. array 안에 순서대로 6,3,8,4,2를 넣어주세요.
		// -> array의 0번방에 6..
		// 3. 배열 안에 자료 중에서 가장 큰 값이 무엇인지 출력하기
		// -> 0~4 인덱스(=방, 방번호)까지 반복하면서 숫자끼리 값을 비교해서 최대값을 업데이트
		// 4. 출력
		// -> array에 들어가는 값은 [6,3,8,4,2]
		// -> 가장 큰 값은 8 입니다.

		int[] ar = { 6, 3, 8, 4, 2 };
		int b = 0;
		for (int i = 0; i < 5; i++) {
			if (ar[i] >= b) {
				b = ar[i];
				System.out.println((i + 1) + "번째 비교 " + b);
			} else {
				System.out.println((i + 1) + "번째 비교 " + b);
			}
		}
		System.out.println("최종" + b);
		
		
		
		
		
		
		
		
		
	}

}
